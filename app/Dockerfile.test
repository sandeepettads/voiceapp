# Stage 1: Build the Vite app
# Using Chainguard Node.js image from enterprise registry (verified available tag)
FROM docker.repo1.uhc.com/orxcoreplatform/chainguard/node:24.4-latest AS build-stage

# Set the working directory and copy frontend files
WORKDIR /frontend
COPY ./frontend/ .
# Fix ownership for the non-root user in Chainguard
USER root
RUN chown -R node:node /frontend
USER node

# Skip npm install for testing and create dummy dist directory
RUN mkdir -p dist && echo "<h1>Test Build</h1>" > dist/index.html

# Stage 2: Serve the built app with a static file server  
# Using Chainguard Python image from enterprise registry
FROM docker.repo1.uhc.com/orxcoreplatform/chainguard/python:3.12-latest AS production-stage

WORKDIR /app
COPY --from=build-stage /frontend/dist /app/static
COPY ./backend/ /app

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Use exec form to avoid shell requirements
RUN ["python", "-m", "pip", "install", "-r", "requirements.txt"]
RUN ["python", "-m", "pip", "install", "gunicorn"]

CMD ["python3", "-m", "gunicorn", "app:create_app", "-b", "0.0.0.0:8000", "--worker-class", "aiohttp.GunicornWebWorker"]
